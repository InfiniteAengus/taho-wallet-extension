name: PR flow

on:
  pull_request: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Read .nvmrc
        run: echo "::set-output name=NVMRC::$(cat ./.nvmrc)"
        id: nvm
      - name: Use Node + Yarn
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - name: Detect env block
        id: env-block
        uses: actions/github-script@v6
        with:
          script: |
            const detectEnvBlock = require("./.github/workflows/builds/detect-env-block.js")
            return await detectEnvBlock({ github, context })
      - name: Dev build
        run: |
          echo ${{ steps.env-block.outputs.result }} > .env
          echo 'USE_ANALYTICS_SOURCE="BETA"' >> .env
          yarn build
        env:
          ALCHEMY_KEY: ${{ secrets.DEV_ALCHEMY_API_KEY || 'oV1Rtjh61hGa97X2MTqMY9kEUcpxP-6K' }}
          BLOCKNATIVE_API_KEY: ${{ secrets.DEV_BLOCKNATIVE_API_KEY || 'f60816ff-da02-463f-87a6-67a09c6d53fa' }}
          COMMIT_SHA: ${{ github.sha }}
      - name: Upload build asset
        uses: actions/upload-artifact@v3
        with:
          name: extension-builds-${{ github.event.number }}
          path: dist/*.zip
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Read .nvmrc
        run: echo "::set-output name=NVMRC::$(cat ./.nvmrc)"
        id: nvm
      - name: Use Node + Yarn
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: yarn test
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Read .nvmrc
        run: echo "::set-output name=NVMRC::$(cat ./.nvmrc)"
        id: nvm
      - name: Use Node + Yarn
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: yarn lint
